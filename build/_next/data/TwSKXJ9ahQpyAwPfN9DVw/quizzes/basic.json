{"pageProps":{"quizData":[{"id":"1","question":"React is a JavaScript library for building ___.","options":["Database","Connectivity","User interface","Design Platform"],"correctAnswer":"3","explanation":"React is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It allows developers to create large web applications that can change data, without reloading the page."},{"id":"2","question":"User interface developed with React is made of small and isolated pieces of code called ___.","options":["Hook","Component","Function","Snippet"],"correctAnswer":"2","explanation":"React applications are built using components, which are reusable, self-contained pieces of code that define how a part of the user interface should appear and behave."},{"id":"3","question":"What are the two main types of components in React.js?","options":["Class based and functional","Functional and stateful","UI and container","Presentational and container"],"correctAnswer":"1","explanation":"React has two main types of components: Class based and functional. Class components are ES6 classes that extend from React.Component, and functional components are simpler functions that return JSX."},{"id":"4","question":"A React component takes in parameters called ___?","options":["Attributes","Events","Props","Children"],"correctAnswer":"3","explanation":"Props (short for properties) are inputs to a React component. They are single values or objects containing a set of values that are passed to components on creation and fixed throughout the component's lifecycle."},{"id":"5","question":"To write HTML in react we make use of ___?","options":["React.createElement()","HTTP","XML","JSX"],"correctAnswer":"4","explanation":"JSX stands for JavaScript XML. It allows us to write HTML in React. JSX makes it easier to write and add HTML in React."},{"id":"6","question":"JSX Stands for ___?","options":["JavaScript Extension","JavaScript Extreme","JavaScript XML","JavaScript XScript"],"correctAnswer":"3","explanation":"JSX stands for JavaScript XML. It allows you to write HTML-like syntax within JavaScript, which React then transforms into JavaScript objects representing those elements."},{"id":"7","question":"React DOM uses ___ case property naming convention?","options":["Camel","Pascal"," Snake","Kebab"],"correctAnswer":"1","explanation":"React DOM uses camelCase naming convention for attributes and event handlers. For example, `class` becomes `className` and `onclick` becomes `onClick`."},{"id":"8","question":"___ are the smallest building blocks of React apps.","options":["Components","Tags","Elements","JSX"],"correctAnswer":"3","explanation":"Elements are the smallest building blocks of React apps. They describe what you want to see on the screen and are immutable once created."},{"id":"9","question":"Can we update the React elements once they are rendered?","options":["Yes","No"],"correctAnswer":"2","explanation":"React elements are immutable. Once you create an element, you can’t change its children or attributes. If you want to update the UI, you have to create a new element."},{"id":"10","question":"Applications built with just React usually have a single ___?","options":["Root DOM node","Parent Node","Component","Constructor"],"correctAnswer":"1","explanation":"React applications typically have a single root DOM node. The rest of the application is nested inside this root element."},{"id":"11","question":"A component name must start with a ___ letter","options":["Lowercase","Capital"],"correctAnswer":"2","explanation":"React treats components starting with lowercase letters as DOM tags. Therefore, a component name must start with a capital letter."},{"id":"12","question":"Can we render a React component from another component?","options":["Yes","No"],"correctAnswer":"1","explanation":"Yes, components can refer to other components in their output. This lets us use the same component abstraction for any level of detail."},{"id":"13","question":"Can a component modify its own props?","options":["Yes","No"],"correctAnswer":"2","explanation":"Components must act like pure functions with respect to their props. They cannot modify their own props but can modify their state."},{"id":"14","question":"Which component lifecycle method runs after the component output has been rendered to the DOM?","options":["componentMounted()","componentWillUnmount()","componentDidMount()","componentDidRender()"],"correctAnswer":"3","explanation":"componentDidMount() is invoked immediately after a component is mounted (inserted into the tree). Initialization that requires DOM nodes should go here."},{"id":"15","question":"Which component lifecycle method is used to perform the cleanup when the component is removed from the DOM?","options":["componentUnmounted()","componentWillUnmount()","componentDidUnMount()","componentDidRender()"],"correctAnswer":"2","explanation":"componentWillUnmount() is invoked immediately before a component is unmounted and destroyed. Cleanup that needs to happen before the component is removed from the DOM should go here."},{"id":"16","question":"State of a component is often called ___ data?","options":["public","protected","private","local or encapsulated"],"correctAnswer":"4","explanation":"State is often called local or encapsulated data because neither parent nor child components can know if a certain component is stateful or stateless."},{"id":"17","question":"In React, data flows in ___?","options":["top-down or unidirectional","bottom-up","bi-directional","two-way"],"correctAnswer":"1","explanation":"Data in React flows downwards (unidirectional) from parent to child components. Any state is always owned by some specific component, and any data or UI derived from that state can only affect components below them in the tree."},{"id":"18","question":"In order to prevent a component from rendering it should return ___?","options":["undefined","false","null","empty string"],"correctAnswer":"3","explanation":"To prevent a component from rendering, it should return null. This will hide the component without affecting the rest of the UI."},{"id":"19","question":"If a component returns null, are its lifecycle methods still called?","options":["Yes","No"],"correctAnswer":"1","explanation":"Returning null from a component’s render method does not affect the firing of the component’s lifecycle methods. Lifecycle methods like componentDidUpdate will still be called."}],"title":"Basic React Js Quiz","description":"Take a basic react js quiz consist of multiple choice questions."},"__N_SSG":true}