{"pageProps":{"quizData":[{"id":172,"question":"What are the core components of React Native for building user interfaces?","options":["View, Text, Image, Button","Div, Span, Img, Button","Panel, TextBlock, Image, Button","Section, Paragraph, Picture, Button"],"correctAnswer":"1","explanation":"The core components of React Native include View, Text, Image, and Button. For example, the View component is used to create containers and layout structure, while the Text component is used to display text content. Similarly, the Image component is used to display images, and the Button component is used to create interactive buttons."},{"id":173,"question":"How do you style components in React Native?","options":["Using CSS files","Using inline styles","Using external style libraries","Styling is not supported in React Native"],"correctAnswer":"2","explanation":"In React Native, components are styled using inline styles with the StyleSheet API. Inline styles provide a way to define styles directly within the components, similar to CSS, making it easier to manage component styling. For example, you can define styles like color, font size, and padding directly within the component's style prop."},{"id":174,"question":"Which component is used for displaying text in React Native?","options":["Text","Paragraph","Span","Label"],"correctAnswer":"1","explanation":"The Text component is used for displaying text in React Native applications. It is similar to the <span> element in HTML and is used to render text content on the screen. For example, you can use the Text component to display headings, paragraphs, or any other text-based content in your app."},{"id":175,"question":"What is the purpose of the Image component in React Native?","options":["To display images","To embed videos","To create animations","To render SVG graphics"],"correctAnswer":"1","explanation":"The Image component in React Native is used to display images in the app. It allows developers to include images from various sources such as local assets, network URLs, or even base64 data. For example, you can use the Image component to display product images, user avatars, or any other visual content in your app."},{"id":176,"question":"Which component is used to handle user input in React Native?","options":["TextInput","Input","TextField","Textbox"],"correctAnswer":"1","explanation":"The TextInput component is used to handle user input in React Native applications. It provides an input field where users can enter text or numeric data. For example, you can use the TextInput component to create forms, search bars, or any other input fields where user interaction is required."},{"id":177,"question":"What component is used to create buttons in React Native?","options":["Button","Clickable","Pressable","Link"],"correctAnswer":"1","explanation":"The Button component is used to create interactive buttons in React Native applications. It allows developers to define button text, styles, and onPress event handlers. For example, you can use the Button component to create submit buttons, navigation buttons, or any other clickable elements in your app."},{"id":178,"question":"What is the purpose of the View component in React Native?","options":["To display images","To create layout structure","To handle user input","To render text"],"correctAnswer":"2","explanation":"The View component in React Native is used to create layout structure and organize other components. It acts as a container that groups other components together and defines their positioning and alignment. For example, you can use the View component to create sections, containers, or any other layout structures in your app."},{"id":179,"question":"How can you include icons in your React Native application?","options":["Using the Icon component","Using the Image component","Using third-party libraries like React Native Vector Icons","Icons are not supported in React Native"],"correctAnswer":"3","explanation":"You can include icons in your React Native application using third-party libraries like React Native Vector Icons. These libraries provide a wide range of icon sets that can be easily integrated into your app. For example, you can use icons for navigation, buttons, or any other visual elements to enhance the user experience."},{"id":180,"question":"What is the purpose of the ScrollView component in React Native?","options":["To display images","To create layout structure","To handle user input","To scroll content"],"correctAnswer":"4","explanation":"The ScrollView component in React Native is used to scroll content that is larger than the screen size. It provides a way to scroll vertically or horizontally through a list of items or content. For example, you can use the ScrollView component to display long lists, articles, or any other scrollable content in your app."},{"id":181,"question":"How do you handle user interactions like taps in React Native?","options":["Using onPress prop","Using onInteraction prop","Using onClick prop","User interactions are not supported in React Native"],"correctAnswer":"1","explanation":"You handle user interactions like taps in React Native using the onPress prop on components like Button. The onPress prop allows you to define a callback function that will be executed when the user taps on the component. For example, you can use onPress to navigate to another screen, submit a form, or perform any other action in response to user input."},{"id":182,"question":"What is the purpose of the TouchableOpacity component in React Native?","options":["To display images","To create layout structure","To handle user input","To add touchable opacity effects"],"correctAnswer":"4","explanation":"The TouchableOpacity component in React Native is used to add touchable opacity effects to its child components. It provides visual feedback to users when they tap on the component by reducing its opacity. For example, you can use TouchableOpacity to create interactive buttons or clickable elements that change opacity when pressed."},{"id":183,"question":"What is the purpose of the FlatList component in React Native?","options":["To display images","To create layout structure","To handle user input","To render large lists efficiently"],"correctAnswer":"4","explanation":"The FlatList component in React Native is used to render large lists efficiently. It renders only the items that are currently visible on the screen, reducing memory usage and improving performance. For example, you can use FlatList to display long lists of items such as contacts, messages, or products in your app."},{"id":184,"question":"What is the purpose of the SafeAreaView component in React Native?","options":["To display images","To create layout structure","To handle user input","To ensure content displays within safe area boundaries"],"correctAnswer":"4","explanation":"The SafeAreaView component in React Native is used to ensure that content displays within safe area boundaries, especially on devices with notches, rounded corners, or other screen cutouts. It provides padding to avoid content overlapping with system UI elements. For example, you can use SafeAreaView to ensure that important content remains visible and accessible on all devices."},{"id":185,"question":"What is the purpose of the StatusBar component in React Native?","options":["To display images","To create layout structure","To handle user input","To control the appearance of the status bar"],"correctAnswer":"4","explanation":"The StatusBar component in React Native is used to control the appearance of the status bar at the top of the screen. It allows developers to customize the status bar color, background, and visibility. For example, you can use StatusBar to change the status bar color to match your app's theme or to hide it altogether for immersive experiences."},{"id":186,"question":"How can you add custom fonts to your React Native application?","options":["By importing font files directly","By using the Font component","By linking fonts using a third-party library","Custom fonts are not supported in React Native"],"correctAnswer":"3","explanation":"You can add custom fonts to your React Native application by linking fonts using a third-party library like react-native-vector-icons or @expo-google-fonts. This allows you to use custom font families and styles in your app's text components. For example, you can link Google Fonts or custom font files and specify them in your app's configuration."},{"id":187,"question":"What is the purpose of the Modal component in React Native?","options":["To display images","To create layout structure","To handle user input","To present content on top of other content"],"correctAnswer":"4","explanation":"The Modal component in React Native is used to present content on top of other content in a modal overlay. It provides a way to display temporary views or dialogs that require user interaction. For example, you can use Modal to show a confirmation dialog, a login screen, or a photo viewer that overlays the main content."},{"id":188,"question":"How do you create custom reusable components in React Native?","options":["By using built-in components only","By creating JavaScript functions","By extending the Component class","Custom components are not supported in React Native"],"correctAnswer":"3","explanation":"You can create custom reusable components in React Native by extending the Component class from the 'react' package. This allows you to define your own component logic and render methods, making it easy to reuse the component across different parts of your application. For example, you can create custom buttons, cards, or input fields by defining their behavior and appearance."},{"id":189,"question":"What is the purpose of the ActivityIndicator component in React Native?","options":["To display images","To create layout structure","To handle user input","To indicate loading or processing activity"],"correctAnswer":"4","explanation":"The ActivityIndicator component in React Native is used to indicate loading or processing activity to users. It displays a spinning indicator that represents ongoing work in the background. For example, you can use ActivityIndicator to show loading spinners while fetching data from an API or performing long-running tasks."},{"id":190,"question":"How do you handle navigation between screens in a React Native application?","options":["By using the navigate() function","By using the Link component","By updating the state directly","Navigation is not supported in React Native"],"correctAnswer":"1","explanation":"You handle navigation between screens in a React Native application by using the navigate() function provided by the navigation library (e.g., React Navigation). This function allows you to programmatically navigate to different screens based on user actions or application logic. For example, you can navigate to a new screen when a button is pressed or when certain conditions are met."},{"id":191,"question":"What is the purpose of the KeyboardAvoidingView component in React Native?","options":["To display images","To create layout structure","To handle user input","To adjust layout when the keyboard is displayed"],"correctAnswer":"4","explanation":"The KeyboardAvoidingView component in React Native is used to adjust the layout when the keyboard is displayed. It ensures that input fields remain visible and accessible even when the keyboard is shown, preventing them from being obscured by the keyboard. For example, you can wrap your input fields in KeyboardAvoidingView to automatically adjust their position when the keyboard appears."}],"title":"Components and UI Quiz","description":"Explore React Native's Components and UI through an interactive quiz experience, and deepen your understanding of building dynamic mobile interfaces."},"__N_SSG":true}