(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[94093],{25129:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/performance-optimization/code-splitting/what-is-preloading-in-the-context-of-code-splitting",function(){return n(79012)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var o=n(85893),i=n(67294),s=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:s="auto",className:r,fullWidthResponsive:a="true",style:l={}}=e,c=(0,i.useRef)(null),d=(0,i.useRef)(!1),[u,p]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,o.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(r),style:{display:"block",...l},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":s,"data-full-width-responsive":a}):null};function r(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(s,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(s,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"336px",height:"280px"}})})]})})}constructor(e){super(e)}}}},79012:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return a}});var o=n(85893),i=n(73903),s=n(25190),r=n(16833),a=!0;t.default=(0,s.Z)((0,r.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"React Performance Optimization: Code Splitting"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(i.Y3,{activeQuestionIndex:15,totalQuestions:20,index:15,question:"What is 'preloading' in the context of code splitting?",options:["Loading all possible code chunks when the application starts","Telling the browser to load resources that will be needed soon","Pre-rendering components before they're visible","Compressing code before it's sent to the browser"],code:void 0,nextQuestionPath:"which-scenario-would-benefit-least-from-code-splitting",correctAnswer:2,explanation:'In the context of code splitting, preloading is a technique that tells the browser to load resources that will be needed soon, but not immediately. For example, you might preload a code chunk when a user hovers over a button that will require that chunk when clicked. This can be implemented by triggering the dynamic import early but not using the result yet, or through resource hints like <link rel="preload">. Preloading improves perceived performance by starting to load resources before they\'re explicitly needed, making interactions feel more responsive.',id:596,quizId:29},15)})]})))}},function(e){e.O(0,[41966,25675,29325,92888,49774,40179],function(){return e(e.s=25129)}),_N_E=e.O()}]);