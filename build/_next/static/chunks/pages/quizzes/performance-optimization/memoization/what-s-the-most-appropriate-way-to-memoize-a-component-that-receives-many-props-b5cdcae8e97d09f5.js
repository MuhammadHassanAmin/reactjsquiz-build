(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[86543],{52428:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/performance-optimization/memoization/what-s-the-most-appropriate-way-to-memoize-a-component-that-receives-many-props",function(){return o(90458)}])},16833:function(e,t,o){"use strict";o.d(t,{Z:function(){return i}});var s=o(85893),n=o(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:o="6753219060",adFormat:a="auto",className:i,fullWidthResponsive:c="true",style:r={}}=e,l=(0,n.useRef)(null),d=(0,n.useRef)(!1),[p,u]=(0,n.useState)(!1);return((0,n.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,n.useEffect)(()=>{if(p){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[p]),p)?(0,s.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(i),style:{display:"block",...r},"data-ad-client":t,"data-ad-slot":o,"data-ad-format":a,"data-full-width-responsive":c}):null};function i(e){return class extends n.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,s.jsx)(a,{adSlot:"6208304795",className:"h-[336px]"})}),(0,s.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,s.jsx)(a,{adSlot:"6208304795",className:"h-[336px]"})})]})]})})}constructor(e){super(e)}}}},90458:function(e,t,o){"use strict";o.r(t),o.d(t,{__N_SSG:function(){return c}});var s=o(85893),n=o(73903),a=o(25190),i=o(16833),c=!0;t.default=(0,a.Z)((0,i.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"React Performance Optimization: Memoization"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(n.Y3,{activeQuestionIndex:17,totalQuestions:20,index:17,question:"What's the most appropriate way to memoize a component that receives many props?",options:["Use individual useMemo calls for each prop","Use React.memo with a custom comparison function","Create smaller child components that each receive fewer props","Use React.useMemoComponent (a fictional API)"],code:void 0,nextQuestionPath:"how-does-using-the-usecallback-hook-affect-the-react-devtools-profiler-results",correctAnswer:2,explanation:"For a component that receives many props, the most appropriate approach is often to use React.memo with a custom comparison function. This allows you to precisely control which prop changes should trigger re-renders. Alternatively, breaking down the component into smaller components (option C) is also a good strategy as it allows more granular memoization and can improve maintainability. The choice depends on the specific scenario, but using a custom comparison function gives you the most control.",id:548,quizId:27},17)})]})))}},function(e){e.O(0,[41966,25675,29325,92888,49774,40179],function(){return e(e.s=52428)}),_N_E=e.O()}]);